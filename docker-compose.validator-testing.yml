services:
  # Validator node connecting to mainnet
  validator:
    build: .
    container_name: qbtc-validator
    environment:
      WALLET_PASSWORD: ${VALIDATOR_WALLET_PASSWORD}
      WALLET_FILE: ${VALIDATOR_WALLET_FILE:-validator.json}
      DISABLE_NAT_TRAVERSAL: "false"
      ROCKSDB_PATH: "/app/db"
      # Production security configuration
      RATE_LIMIT_ENABLED: "false"
      DDOS_PROTECTION_ENABLED: "true"
      ADMIN_ADDRESS: ${ADMIN_ADDRESS}
      ATTACK_PATTERN_DETECTION: "true"
      BOT_DETECTION_ENABLED: "true"
      PEER_REPUTATION_ENABLED: "true"
      SECURITY_LOGGING_ENABLED: "true"
      # Redis configuration
      USE_REDIS: "true"
      REDIS_URL: "redis://redis:6379/0"
      # Rate limits (requests per minute)
      RATE_LIMIT_WORKER: "10"
      RATE_LIMIT_BALANCE: "100"
      RATE_LIMIT_TRANSACTIONS: "100"
      RATE_LIMIT_HEALTH: "100"
      RATE_LIMIT_UTXOS: "100"
      RATE_LIMIT_DEFAULT: "60"
      # RPC configuration
      RPC_PORT: ${RPC_PORT:-8332}
    command: ["--bootstrap_server", "${BOOTSTRAP_SERVER:-api.bitcoinqs.org}", "--bootstrap_port", "${BOOTSTRAP_PORT:-8001}", "--dht-port", "8001", "--gossip-port", "8002"]
    ports:
      # Remove 8080 from here since nginx will handle it
      - "${RPC_PORT:-8332}:8332"     # RPC (configurable)
      - "8001:8001/udp" # DHT UDP
      - "8002:8002"     # Gossip TCP
    volumes:
      - validator-data:/app/db
      - ./logs:/var/log/qbtc
    depends_on:
      - redis
    networks:
      - qbtc-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: qbtc-redis-validator
    volumes:
      - redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - qbtc-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: qbtc-prometheus-validator
    volumes:
      - ./monitoring/prometheus-validator.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=720h'  # 30 days retention
      - '--web.enable-lifecycle'
      - '--web.listen-address=:9090'
    networks:
      - qbtc-network
    restart: unless-stopped
    depends_on:
      - validator

  # Nginx reverse proxy - Only serves API on 8080
  nginx:
    image: nginx:alpine
    container_name: qbtc-nginx-validator
    ports:
      - "8080:8080"    # API/WebSocket with SSL
    volumes:
      - ./monitoring/nginx/nginx-validator-testing.conf:/etc/nginx/nginx.conf:ro
      - ./monitoring/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - qbtc-network
    restart: unless-stopped
    depends_on:
      - validator
    security_opt:
      - no-new-privileges:true

volumes:
  validator-data:
  redis-data:
  prometheus-data:

networks:
  qbtc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16
