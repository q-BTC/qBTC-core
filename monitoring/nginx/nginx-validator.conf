user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=grafana_limit:10m rate=100r/s;
    limit_req_status 429;
    
    # Whitelist for Grafana internal requests
    map $http_x_forwarded_for $limit_grafana {
        default 1;
        ~^172\.22\. 0;  # Docker network subnet for validator
        ~^127\.0\.0\.1 0;  # Localhost
    }

    # Hide nginx version
    server_tokens off;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Port 8080 - API and WebSocket with SSL
    server {
        listen 8080 ssl;
        http2 on;
        server_name _;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        # Rate limiting for API
        limit_req zone=api_limit burst=40 nodelay;

        # Block debug endpoints
        location ~ ^/debug/ {
            return 403;
        }

        # WebSocket endpoint
        location /ws {
            proxy_pass http://validator:8080/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Disable buffering for WebSocket
            proxy_buffering off;
        }

        # All other API endpoints
        location / {
            proxy_pass http://validator:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # DON'T add CORS headers here - let the backend handle them
            # This prevents duplicate headers
            
            # Handle preflight requests
            if ($request_method = OPTIONS) {
                # Pass OPTIONS requests to backend
                proxy_pass http://validator:8080;
            }
        }
    }

    # Port 443 - Grafana Dashboard (public, view-only)
    server {
        listen 443 ssl default_server;
        http2 on;
        server_name _;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        # Grafana static assets with no rate limiting
        location ~* ^/(public|api/frontend|api/datasources|api/plugins)/.+\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map|json)$ {
            # Disable rate limiting for static assets
            limit_req off;
            
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Aggressive caching for static assets
            proxy_cache_valid 200 302 1h;
            proxy_cache_valid 404 1m;
            
            # Cache headers
            add_header Cache-Control "public, max-age=3600, immutable";
            
            # CORS headers for chunk loading
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "*" always;
            add_header Access-Control-Max-Age "3600" always;
            
            # Handle preflight
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*" always;
                add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
                add_header Access-Control-Allow-Headers "*" always;
                add_header Access-Control-Max-Age "3600" always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            
            # Increased buffer sizes for large chunks
            proxy_buffer_size 256k;
            proxy_buffers 32 512k;
            proxy_busy_buffers_size 1m;
            proxy_temp_file_write_size 1m;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # API endpoints with rate limiting
        location ~* ^/api/(dashboards|annotations|search|query|tsdb|ds/query|alerts|alert-notifications|user|org|users|orgs|teams|admin|playlists|dashboard|live) {
            # Apply rate limiting to API endpoints
            limit_req zone=grafana_limit burst=50 nodelay;
            limit_req_status 429;
            
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Increased buffer sizes
            proxy_buffer_size 128k;
            proxy_buffers 16 256k;
            proxy_busy_buffers_size 512k;
            
            # Timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Allow all Grafana paths
        location / {
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for live updates
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Increased timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Increased buffer sizes
            proxy_buffer_size 64k;
            proxy_buffers 8 128k;
            proxy_busy_buffers_size 256k;
        }

        # Only block specific admin endpoints
        location ~ ^/(admin|profile/password) {
            return 403;
        }
    }

    # Redirect port 80 to HTTPS Grafana
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }
}