user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security headers (removed HSTS since we're not using SSL)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=20r/s;
    limit_req_status 429;

    # Hide nginx version
    server_tokens off;

    # Port 8080 - API and WebSocket without SSL
    server {
        listen 8080;
        server_name _;

        # Rate limiting for API
        limit_req zone=api_limit burst=40 nodelay;

        # Block debug endpoints
        location ~ ^/debug/ {
            return 403;
        }

        # WebSocket endpoint
        location /ws {
            proxy_pass http://validator:8080/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;

            # Disable buffering for WebSocket
            proxy_buffering off;
        }

        # All other API endpoints
        location / {
            proxy_pass http://validator:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # DON'T add CORS headers here - let the backend handle them
            # This prevents duplicate headers

            # Handle preflight requests
            if ($request_method = OPTIONS) {
                # Pass OPTIONS requests to backend
                proxy_pass http://validator:8080;
            }
        }
    }
}
