version: '3.8'

services:
  # Bootstrap node - initial network node
  bootstrap:
    build: .
    container_name: qbtc-bootstrap
    environment:
      WALLET_PASSWORD: ${BOOTSTRAP_WALLET_PASSWORD:-bootstrappass}
      WALLET_FILE: "bootstrap.json"
      DISABLE_NAT_TRAVERSAL: "true"
      ROCKSDB_PATH: "/app/db"
      # Security configuration - disabled for test network
      RATE_LIMIT_ENABLED: "false"
      DDOS_PROTECTION_ENABLED: "false"
      ADMIN_ADDRESS: "bqs1HpmbeSd8nhRpq5zX5df91D3Xy8pSUovmV"
      ATTACK_PATTERN_DETECTION: "false"
      BOT_DETECTION_ENABLED: "false"
      PEER_REPUTATION_ENABLED: "true"
      SECURITY_LOGGING_ENABLED: "true"
      # Redis configuration
      USE_REDIS: "true"
      REDIS_URL: "redis://redis:6379/0"
    command: ["--bootstrap", "--dht-port", "8001", "--gossip-port", "8002"]
    ports:
      - "8080:8080"     # Web API
      - "8332:8332"     # RPC
      - "8001:8001/udp" # DHT UDP
      - "8002:8002"     # Gossip TCP
    volumes:
      - bootstrap-data:/app/db
      - ./logs:/var/log/qbtc
    depends_on:
      - redis
    networks:
      - qbtc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Validator node 1
  validator1:
    build: .
    container_name: qbtc-validator1
    environment:
      WALLET_PASSWORD: ${VALIDATOR1_WALLET_PASSWORD:-validator1pass}
      WALLET_FILE: "validator1.json"
      DISABLE_NAT_TRAVERSAL: "true"
      ROCKSDB_PATH: "/app/db"
      # Security configuration - disabled for test network
      RATE_LIMIT_ENABLED: "false"
      DDOS_PROTECTION_ENABLED: "false"
      ADMIN_ADDRESS: "bqs1HpmbeSd8nhRpq5zX5df91D3Xy8pSUovmV"
      ATTACK_PATTERN_DETECTION: "false"
      BOT_DETECTION_ENABLED: "false"
      PEER_REPUTATION_ENABLED: "true"
      SECURITY_LOGGING_ENABLED: "true"
      # Redis configuration
      USE_REDIS: "true"
      REDIS_URL: "redis://redis:6379/1"
    command: ["--bootstrap_server", "bootstrap", "--bootstrap_port", "8001", "--dht-port", "8003", "--gossip-port", "8004"]
    ports:
      - "8081:8080"
      - "8333:8332"
      - "8003:8003/udp"
      - "8004:8004"
    volumes:
      - validator1-data:/app/db
      - ./logs:/var/log/qbtc
    depends_on:
      - bootstrap
      - redis
    networks:
      - qbtc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Validator node 2
  validator2:
    build: .
    container_name: qbtc-validator2
    environment:
      WALLET_PASSWORD: ${VALIDATOR2_WALLET_PASSWORD:-validator2pass}
      WALLET_FILE: "validator2.json"
      DISABLE_NAT_TRAVERSAL: "true"
      ROCKSDB_PATH: "/app/db"
      # Security configuration - disabled for test network
      RATE_LIMIT_ENABLED: "false"
      DDOS_PROTECTION_ENABLED: "false"
      ADMIN_ADDRESS: "bqs1HpmbeSd8nhRpq5zX5df91D3Xy8pSUovmV"
      ATTACK_PATTERN_DETECTION: "false"
      BOT_DETECTION_ENABLED: "false"
      PEER_REPUTATION_ENABLED: "true"
      SECURITY_LOGGING_ENABLED: "true"
      # Redis configuration
      USE_REDIS: "true"
      REDIS_URL: "redis://redis:6379/2"
    command: ["--bootstrap_server", "bootstrap", "--bootstrap_port", "8001", "--dht-port", "8005", "--gossip-port", "8006"]
    ports:
      - "8082:8080"
      - "8334:8332"
      - "8005:8005/udp"
      - "8006:8006"
    volumes:
      - validator2-data:/app/db
      - ./logs:/var/log/qbtc
    depends_on:
      - bootstrap
      - redis
    networks:
      - qbtc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: qbtc-redis
    volumes:
      - redis-data:/data
    networks:
      - qbtc-network
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: qbtc-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-test.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - qbtc-network
    restart: unless-stopped
    depends_on:
      - bootstrap
      - validator1
      - validator2

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: qbtc-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/qbtc-overview.json
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - qbtc-network
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  bootstrap-data:
  validator1-data:
  validator2-data:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  qbtc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16